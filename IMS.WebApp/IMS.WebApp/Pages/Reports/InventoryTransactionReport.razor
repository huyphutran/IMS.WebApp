@page "/inventoriesreport"

@inject ISearchInventoryTransactionUseCase SearchInventoryTransactionUseCase
@inject IJSRuntime JSRuntime

<h3>Inventory Transaction</h3>

<br/>
<div id="printarea">
<div class="row">
    <div class="col">
        <label for="inv" >Inventory Name</label>
        <input type="text" id="inv" class="form-control" @bind-value="invName" />
    </div>
        <div class="col">
        <label for="df" >Date From</label>
        <input type="date" id="df" class="form-control" @bind-value="dateFrom" />
    </div>
        
    <div class="col">
        <label for="dt" >Date To</label>
        <input type="date" id="dt" class="form-control" @bind-value="dateTo" />
    </div>
    <div class="col">
        <label for="at">Activity Type </label>
        <select id="at" class="form-control" @bind="activitiesTypeId">
            <option value="0"></option>
            <option value="1"> Purchase Inventory</option>
            <option value="2"> Produce Produce </option>
        </select>
    </div>
    <div class="col">
        <label>&nbsp;</label>
        <button type="button" class="btn btn-primary form-control" @onclick="SearchInventories">Search</button>
    </div>
    <div class="col">
        <label>&nbsp;</label>
        <button type="button" class="btn btn-primary form-control" @onclick="PrintReport">Print</button>
    </div>
</div>
<br/>
 @if(inventoryTransaction != null){
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Inventory</th>
                <th>Activity</th>
                <th>Quantity Before</th>
                <th>Quantity After</th>
                <th>PO#</th>
                <th>Unit Price</th>
                <th>Production#</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var it in inventoryTransaction)
        {
           <tr>
               <td>@it.TransactionDate.ToString("MM/dd/yy")</td>
               <td>@it.Inventory.IventoryName</td>
               <td>
                    @if(it.ActivityType == InventoryTransactionType.PurechaseInvenotry)
                    {
                        <text>Purchase</text>
                    }
                    else if (it.ActivityType == InventoryTransactionType.ProduceProduct)
                    {
                        <text>Produce</text>
                    }
                </td>
               <td> @it.QuantityBefore </td>
               <td> @it.QuantityAfter </td>
               <td> @it.PONumber </td>
               <td> @it.UnitPrice.ToString("c") </td>
               <td>@it.ProductionNumber</td>
           </tr> 
        }
    </tbody>
    </table>
}
</div>



@code {
    public string invName = string.Empty;
    private DateTime? dateFrom;
    private DateTime? dateTo;
    private int activitiesTypeId = 0;
    private IEnumerable<InventoryTransaction>? inventoryTransaction;
    private async Task SearchInventories()
    {
        InventoryTransactionType? invType = null;
        if (activitiesTypeId != 0) invType = (InventoryTransactionType)activitiesTypeId;

        inventoryTransaction = await SearchInventoryTransactionUseCase.ExecuteAsync(invName,
            dateFrom,
            dateTo,
            invType
        );
    }
    private void PrintReport()
    {
        JSRuntime.InvokeVoidAsync("print");
    }
}

